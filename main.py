import logging
from aiogram import Bot, Dispatcher, executor, types
from configuration import API_TOKEN, TikTokLink, InstaLink
import markups as NavButt


# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):

    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤—ñ—Ç {0.first_name}, —Ü–µ–π –±–æ—Ç —â–µ –º–∞–ª–µ–Ω—å–∫–∏–π, —ñ –ø–æ–∫–∏ —â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–º—ñ—î'.format(message.from_user), reply_markup=NavButt.MainMenu)

@dp.message_handler(commands=['stop'])
async def send_welcome(message: types.Message):

    await bot.send_message("–¶—å–æ–≥–æ –±–æ—Ç–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –Ω–µ –∑—É–ø–∏–Ω–∏—Ç–∏")


@dp.message_handler()
async def bot_message(message: types.Message):

    #await message.answer("message.text")
    #print(message.text)
    if message.text == 'ü™° –í–≤–µ—Å—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç—ñ–ª–∞':
        await bot.send_message(message.from_user.id, '–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç—ñ–ª–∞, –∞–ª–µ –ø–æ–∫–∏ —â–æ —è –∑ –Ω–∏–º–∏ –Ω—ñ—á–æ–≥–æ –∑—Ä–æ–±–∏—Ç–∏ –Ω–µ –º–æ–∂—É ü§∑‚Äç‚ôÄÔ∏è')

    elif message.text == 'üß∑ –ü–æ—Å–∏–ª–∞–Ω–Ω—è':
        await bot.send_message(message.from_user.id, '–ü–æ—Å–∏–ª–∞–Ω–Ω—è \n ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏èÔ∏èÔ∏è', reply_markup=NavButt.LinksMenu)
    elif message.text == 'üîô –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é':
        await bot.send_message(message.from_user.id, '–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é \n ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏èÔ∏è', reply_markup=NavButt.MainMenu)
    elif message.text == 'üì∑ Instagram':
        await bot.send_message(message.from_user.id, InstaLink)
    elif message.text == 'üì∫ TikTok':
        await bot.send_message(message.from_user.id, TikTokLink)

    print(message.from_user.id, message.from_user.first_name, " --write-- ", message.text)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


